	in_params = [i/dl, i/ul, i/vl, i/wl, i/pl, i/cl, i/dr, i/ur, i/vr, i/wr, i/pr, i/cr, i/pm, i/um]
	out_params = [o/d, o/u, o/v, o/w, o/p]

START STOP CFG Node 0 (cnt = 10000):
     0. fload  i/dl         ->   r0          (pred = [], succ = [])
     1. fload  i/ul         ->   r1          (pred = [], succ = [])
     2. fload  i/vl         ->   r2          (pred = [], succ = [])
     3. fload  i/wl         ->   r3          (pred = [], succ = [])
     4. fload  i/pl         ->   r4          (pred = [], succ = [])
     5. fload  i/cl         ->   r5          (pred = [], succ = [])
     6. fload  i/dr         ->   r6          (pred = [], succ = [])
     7. fload  i/ur         ->   r7          (pred = [], succ = [])
     8. fload  i/vr         ->   r8          (pred = [], succ = [])
     9. fload  i/wr         ->   r9          (pred = [], succ = [])
    10. fload  i/pr         ->  r10          (pred = [], succ = [])
    11. fload  i/cr         ->  r11          (pred = [], succ = [])
    12. fload  i/pm         ->  r12          (pred = [], succ = [])
    13. fload  i/um         ->  r13          (pred = [], succ = [22. fcmplte])
    14. fmov    c.1,  r25                    (pred = [], succ = [])
    15. fmov    c.2,  r26                    (pred = [], succ = [])
    16. fmov    c.3,  r27                    (pred = [], succ = [])
    17. fmov    c.4,  r28                    (pred = [], succ = [])
    18. fmov    c.5,  r29                    (pred = [], succ = [])
    19. fmov    c.6,  r30                    (pred = [], succ = [])
    20. fmov    c.7,  r31                    (pred = [], succ = [])
    21. fmov    c.8,  r32                    (pred = [], succ = [])
    22. fcmplte c.0.0,  r13  ->   p0          (pred = [13. fload ], succ = [23. jump  , 91. jump  ])
    160. pmov     p0         ->   p9          (pred = [], succ = [])
    24. fstore   r2,  o/v           ?   p9   (pred = [], succ = [])
    25. fstore   r3,  o/w           ?   p9   (pred = [], succ = [])
    26. fcmplte  r12,   r4   ->   p1 ?   p9   (pred = [], succ = [27. jump  , 68. jump  ])
    162. pandn    p9,   p1   ->  p11          (pred = [], succ = [])
    161. pand     p9,   p1   ->  p10          (pred = [], succ = [])
    163. pmov    p10         ->  p12          (pred = [], succ = [])
    28. fsub     r1,   r5   ->  r33 ?  p12   (pred = [], succ = [29. fmov  ])
    29. fmov    r33,  r19           ?  p12   (pred = [28. fsub  ], succ = [])
    30. fcmplte c.0.0,  r19  ->   p2 ?  p12   (pred = [], succ = [31. jump  , 35. jump  ])
    165. pandn   p12,   p2   ->  p14          (pred = [], succ = [])
    164. pand    p12,   p2   ->  p13          (pred = [], succ = [])
    166. pmov    p13         ->  p15          (pred = [], succ = [])
    32. fstore   r0,  o/d           ?  p15   (pred = [], succ = [])
    33. fstore   r1,  o/u           ?  p15   (pred = [], succ = [])
    34. fstore   r4,  o/p           ?  p15   (pred = [], succ = [])
    167. pmov    p14         ->  p16          (pred = [], succ = [])
    36. fdiv    r12,   r4   ->  r34 ?  p16   (pred = [], succ = [37. fpow  ])
    37. fpow    r34,  r25   ->  r35 ?  p16   (pred = [36. fdiv  ], succ = [38. fmul  ])
    38. fmul     r5,  r35   ->  r36 ?  p16   (pred = [37. fpow  ], succ = [39. fmov  ])
    39. fmov    r36,  r15           ?  p16   (pred = [38. fmul  ], succ = [])
    40. fsub    r13,  r15   ->  r37 ?  p16   (pred = [], succ = [41. fmov  ])
    41. fmov    r37,  r23           ?  p16   (pred = [40. fsub  ], succ = [])
    42. fcmpge c.0.0,  r23  ->   p3 ?  p16   (pred = [], succ = [43. jump  , 51. jump  ])
    169. pandn   p16,   p3   ->  p18          (pred = [], succ = [])
    168. pand    p16,   p3   ->  p17          (pred = [], succ = [])
    170. pmov    p17         ->  p19          (pred = [], succ = [])
    44. fdiv    r12,   r4   ->  r38 ?  p19   (pred = [], succ = [46. fpow  ])
    45. fdiv   c.1.0,  r32  ->  r39 ?  p19   (pred = [], succ = [46. fpow  ])
    46. fpow    r38,  r39   ->  r40 ?  p19   (pred = [44. fdiv  , 45. fdiv  ], succ = [47. fmul  ])
    47. fmul     r0,  r40   ->  r41 ?  p19   (pred = [46. fpow  ], succ = [48. fstore])
    48. fstore  r41,  o/d           ?  p19   (pred = [47. fmul  ], succ = [])
    49. fstore  r13,  o/u           ?  p19   (pred = [], succ = [])
    50. fstore  r12,  o/p           ?  p19   (pred = [], succ = [])
    171. pmov    p18         ->  p20          (pred = [], succ = [])
    52. fmul    r31,   r1   ->  r42 ?  p20   (pred = [], succ = [53. fadd  ])
    53. fadd     r5,  r42   ->  r43 ?  p20   (pred = [52. fmul  ], succ = [54. fmul  ])
    54. fmul    r29,  r43   ->  r44 ?  p20   (pred = [53. fadd  ], succ = [55. fstore])
    55. fstore  r44,  o/u           ?  p20   (pred = [54. fmul  ], succ = [])
    56. fmul    r31,   r1   ->  r45 ?  p20   (pred = [], succ = [57. fadd  ])
    57. fadd     r5,  r45   ->  r46 ?  p20   (pred = [56. fmul  ], succ = [58. fmul  ])
    58. fmul    r29,  r46   ->  r47 ?  p20   (pred = [57. fadd  ], succ = [59. fmov  ])
    59. fmov    r47,  r14           ?  p20   (pred = [58. fmul  ], succ = [])
    60. fdiv    r14,   r5   ->  r48 ?  p20   (pred = [], succ = [61. fpow  ])
    61. fpow    r48,  r28   ->  r49 ?  p20   (pred = [60. fdiv  ], succ = [62. fmul  ])
    62. fmul     r0,  r49   ->  r50 ?  p20   (pred = [61. fpow  ], succ = [63. fstore])
    63. fstore  r50,  o/d           ?  p20   (pred = [62. fmul  ], succ = [])
    64. fdiv    r14,   r5   ->  r51 ?  p20   (pred = [], succ = [65. fpow  ])
    65. fpow    r51,  r27   ->  r52 ?  p20   (pred = [64. fdiv  ], succ = [66. fmul  ])
    66. fmul     r4,  r52   ->  r53 ?  p20   (pred = [65. fpow  ], succ = [67. fstore])
    67. fstore  r53,  o/p           ?  p20   (pred = [66. fmul  ], succ = [])
    172. pmov    p11         ->  p21          (pred = [], succ = [])
    69. fdiv    r12,   r4   ->  r54 ?  p21   (pred = [], succ = [70. fmov  ])
    70. fmov    r54,  r17           ?  p21   (pred = [69. fdiv  ], succ = [])
    71. fmul    r26,  r17   ->  r55 ?  p21   (pred = [], succ = [72. fadd  ])
    72. fadd    r55,  r25   ->  r56 ?  p21   (pred = [71. fmul  ], succ = [73. fsqrt ])
    73. fsqrt   r56         ->  r57 ?  p21   (pred = [72. fadd  ], succ = [74. fmul  ])
    74. fmul     r5,  r57   ->  r58 ?  p21   (pred = [73. fsqrt ], succ = [75. fsub  ])
    75. fsub     r1,  r58   ->  r59 ?  p21   (pred = [74. fmul  ], succ = [76. fmov  ])
    76. fmov    r59,  r21           ?  p21   (pred = [75. fsub  ], succ = [])
    77. fcmplte c.0.0,  r21  ->   p4 ?  p21   (pred = [], succ = [78. jump  , 82. jump  ])
    174. pandn   p21,   p4   ->  p23          (pred = [], succ = [])
    173. pand    p21,   p4   ->  p22          (pred = [], succ = [])
    175. pmov    p22         ->  p24          (pred = [], succ = [])
    79. fstore   r0,  o/d           ?  p24   (pred = [], succ = [])
    80. fstore   r1,  o/u           ?  p24   (pred = [], succ = [])
    81. fstore   r4,  o/p           ?  p24   (pred = [], succ = [])
    176. pmov    p23         ->  p25          (pred = [], succ = [])
    83. fadd    r17,  r30   ->  r60 ?  p25   (pred = [], succ = [84. fmul  ])
    84. fmul     r0,  r60   ->  r61 ?  p25   (pred = [83. fadd  ], succ = [87. fdiv  ])
    85. fmul    r17,  r30   ->  r62 ?  p25   (pred = [], succ = [86. fadd  ])
    86. fadd    r62, c.1.0  ->  r63 ?  p25   (pred = [85. fmul  ], succ = [87. fdiv  ])
    87. fdiv    r61,  r63   ->  r64 ?  p25   (pred = [84. fmul  , 86. fadd  ], succ = [88. fstore])
    88. fstore  r64,  o/d           ?  p25   (pred = [87. fdiv  ], succ = [])
    89. fstore  r13,  o/u           ?  p25   (pred = [], succ = [])
    90. fstore  r12,  o/p           ?  p25   (pred = [], succ = [])
Edges: 


=================================
Speedup:
	oc = 990000
	orig_oc = 463880
	speedup = 0.4685656565656566
