	in_params = [i/p, i/r, i/u, i/v, i/w]
	out_params = [o/fp_r, o/fp_ru, o/fp_rv, o/fp_rw, o/fp_E, o/fn_r, o/fn_ru, o/fn_rv, o/fn_rw, o/fn_E]

START STOP CFG Node 0 (cnt = 10000):
     0. fload   i/p         ->   r0          (pred = [], succ = [ 6. fmul  ])
     1. fload   i/r         ->   r1          (pred = [], succ = [ 7. fdiv  , 39. fmul  ])
     2. fload   i/u         ->   r2          (pred = [], succ = [10. fsub  , 12. fmov  , 13. fadd  , 42. fmul  , 61. fsub  , 65. fmul  , 68. fadd  , 93. fmul  , 100. fmul  , 113. fsub  , 117. fmul  , 120. fadd  , 145. fmul  , 152. fmul  ])
     3. fload   i/v         ->   r3          (pred = [], succ = [43. fmul  , 73. fmul  , 76. fmul  , 79. fmul  , 125. fmul  , 128. fmul  , 131. fmul  ])
     4. fload   i/w         ->   r4          (pred = [], succ = [45. fmul  , 83. fmul  , 86. fmul  , 89. fmul  , 135. fmul  , 138. fmul  , 141. fmul  ])
     5. fmov   c.1.4,   r5                   (pred = [], succ = [])
     6. fmul     r5,   r0   ->   r7          (pred = [ 0. fload ], succ = [ 7. fdiv  ])
     7. fdiv     r7,   r1   ->   r8          (pred = [ 1. fload ,  6. fmul  ], succ = [ 8. fsqrt ])
     8. fsqrt    r8         ->   r9          (pred = [ 7. fdiv  ], succ = [ 9. fmov  ])
     9. fmov     r9,   r6                    (pred = [ 8. fsqrt ], succ = [])
    10. fsub     r2,   r6   ->  r11          (pred = [ 2. fload ], succ = [11. fmov  ])
    11. fmov    r11,  r10                    (pred = [10. fsub  ], succ = [])
    12. fmov     r2,  r12                    (pred = [ 2. fload ], succ = [])
    13. fadd     r2,   r6   ->  r14          (pred = [ 2. fload ], succ = [14. fmov  ])
    14. fmov    r14,  r13                    (pred = [13. fadd  ], succ = [])
    15. fabs    r10         ->  r16          (pred = [], succ = [16. fadd  ])
    16. fadd    r10,  r16   ->  r17          (pred = [15. fabs  ], succ = [17. fmul  ])
    17. fmul   c.0.5,  r17  ->  r18          (pred = [16. fadd  ], succ = [18. fmov  ])
    18. fmov    r18,  r15                    (pred = [17. fmul  ], succ = [])
    19. fabs    r12         ->  r20          (pred = [], succ = [20. fadd  ])
    20. fadd    r12,  r20   ->  r21          (pred = [19. fabs  ], succ = [21. fmul  ])
    21. fmul   c.0.5,  r21  ->  r22          (pred = [20. fadd  ], succ = [22. fmov  ])
    22. fmov    r22,  r19                    (pred = [21. fmul  ], succ = [])
    23. fabs    r13         ->  r24          (pred = [], succ = [24. fadd  ])
    24. fadd    r13,  r24   ->  r25          (pred = [23. fabs  ], succ = [25. fmul  ])
    25. fmul   c.0.5,  r25  ->  r26          (pred = [24. fadd  ], succ = [26. fmov  ])
    26. fmov    r26,  r23                    (pred = [25. fmul  ], succ = [])
    27. fabs    r10         ->  r28          (pred = [], succ = [28. fsub  ])
    28. fsub    r10,  r28   ->  r29          (pred = [27. fabs  ], succ = [29. fmul  ])
    29. fmul   c.0.5,  r29  ->  r30          (pred = [28. fsub  ], succ = [30. fmov  ])
    30. fmov    r30,  r27                    (pred = [29. fmul  ], succ = [])
    31. fabs    r12         ->  r32          (pred = [], succ = [32. fsub  ])
    32. fsub    r12,  r32   ->  r33          (pred = [31. fabs  ], succ = [33. fmul  ])
    33. fmul   c.0.5,  r33  ->  r34          (pred = [32. fsub  ], succ = [34. fmov  ])
    34. fmov    r34,  r31                    (pred = [33. fmul  ], succ = [])
    35. fabs    r13         ->  r36          (pred = [], succ = [36. fsub  ])
    36. fsub    r13,  r36   ->  r37          (pred = [35. fabs  ], succ = [37. fmul  ])
    37. fmul   c.0.5,  r37  ->  r38          (pred = [36. fsub  ], succ = [38. fmov  ])
    38. fmov    r38,  r35                    (pred = [37. fmul  ], succ = [])
    39. fmul   c.0.5,   r1  ->  r40          (pred = [ 1. fload ], succ = [40. fdiv  ])
    40. fdiv    r40,   r5   ->  r41          (pred = [39. fmul  ], succ = [41. fmov  ])
    41. fmov    r41,  r39                    (pred = [40. fdiv  ], succ = [])
    42. fmul     r2,   r2   ->  r43          (pred = [ 2. fload ], succ = [44. fadd  ])
    43. fmul     r3,   r3   ->  r44          (pred = [ 3. fload ], succ = [44. fadd  ])
    44. fadd    r43,  r44   ->  r45          (pred = [42. fmul  , 43. fmul  ], succ = [46. fadd  ])
    45. fmul     r4,   r4   ->  r46          (pred = [ 4. fload ], succ = [46. fadd  ])
    46. fadd    r45,  r46   ->  r47          (pred = [44. fadd  , 45. fmul  ], succ = [47. fmov  ])
    47. fmov    r47,  r42                    (pred = [46. fadd  ], succ = [])
    48. fmul   c.0.5,  r42  ->  r49          (pred = [], succ = [52. fadd  ])
    49. fmul     r6,   r6   ->  r50          (pred = [], succ = [51. fdiv  ])
    50. fsub     r5, c.1.0  ->  r51          (pred = [], succ = [51. fdiv  ])
    51. fdiv    r50,  r51   ->  r52          (pred = [49. fmul  , 50. fsub  ], succ = [52. fadd  ])
    52. fadd    r49,  r52   ->  r53          (pred = [48. fmul  , 51. fdiv  ], succ = [53. fmov  ])
    53. fmov    r53,  r48                    (pred = [52. fadd  ], succ = [])
    54. fsub     r5, c.1.0  ->  r54          (pred = [], succ = [55. fmul  ])
    55. fmul   c.2.0,  r54  ->  r55          (pred = [54. fsub  ], succ = [56. fmul  ])
    56. fmul    r55,  r19   ->  r56          (pred = [55. fmul  ], succ = [57. fadd  ])
    57. fadd    r15,  r56   ->  r57          (pred = [56. fmul  ], succ = [58. fadd  ])
    58. fadd    r57,  r23   ->  r58          (pred = [57. fadd  ], succ = [59. fmul  ])
    59. fmul    r39,  r58   ->  r59          (pred = [58. fadd  ], succ = [60. fstore])
    60. fstore  r59, o/fp_r                  (pred = [59. fmul  ], succ = [])
    61. fsub     r2,   r6   ->  r60          (pred = [ 2. fload ], succ = [62. fmul  ])
    62. fmul    r60,  r15   ->  r61          (pred = [61. fsub  ], succ = [67. fadd  ])
    63. fsub     r5, c.1.0  ->  r62          (pred = [], succ = [64. fmul  ])
    64. fmul   c.2.0,  r62  ->  r63          (pred = [63. fsub  ], succ = [65. fmul  ])
    65. fmul    r63,   r2   ->  r64          (pred = [ 2. fload , 64. fmul  ], succ = [66. fmul  ])
    66. fmul    r64,  r19   ->  r65          (pred = [65. fmul  ], succ = [67. fadd  ])
    67. fadd    r61,  r65   ->  r66          (pred = [62. fmul  , 66. fmul  ], succ = [70. fadd  ])
    68. fadd     r2,   r6   ->  r67          (pred = [ 2. fload ], succ = [69. fmul  ])
    69. fmul    r67,  r23   ->  r68          (pred = [68. fadd  ], succ = [70. fadd  ])
    70. fadd    r66,  r68   ->  r69          (pred = [67. fadd  , 69. fmul  ], succ = [71. fmul  ])
    71. fmul    r39,  r69   ->  r70          (pred = [70. fadd  ], succ = [72. fstore])
    72. fstore  r70, o/fp_ru                  (pred = [71. fmul  ], succ = [])
    73. fmul     r3,  r15   ->  r71          (pred = [ 3. fload ], succ = [78. fadd  ])
    74. fsub     r5, c.1.0  ->  r72          (pred = [], succ = [75. fmul  ])
    75. fmul   c.2.0,  r72  ->  r73          (pred = [74. fsub  ], succ = [76. fmul  ])
    76. fmul    r73,   r3   ->  r74          (pred = [ 3. fload , 75. fmul  ], succ = [77. fmul  ])
    77. fmul    r74,  r19   ->  r75          (pred = [76. fmul  ], succ = [78. fadd  ])
    78. fadd    r71,  r75   ->  r76          (pred = [73. fmul  , 77. fmul  ], succ = [80. fadd  ])
    79. fmul     r3,  r23   ->  r77          (pred = [ 3. fload ], succ = [80. fadd  ])
    80. fadd    r76,  r77   ->  r78          (pred = [78. fadd  , 79. fmul  ], succ = [81. fmul  ])
    81. fmul    r39,  r78   ->  r79          (pred = [80. fadd  ], succ = [82. fstore])
    82. fstore  r79, o/fp_rv                  (pred = [81. fmul  ], succ = [])
    83. fmul     r4,  r15   ->  r80          (pred = [ 4. fload ], succ = [88. fadd  ])
    84. fsub     r5, c.1.0  ->  r81          (pred = [], succ = [85. fmul  ])
    85. fmul   c.2.0,  r81  ->  r82          (pred = [84. fsub  ], succ = [86. fmul  ])
    86. fmul    r82,   r4   ->  r83          (pred = [ 4. fload , 85. fmul  ], succ = [87. fmul  ])
    87. fmul    r83,  r19   ->  r84          (pred = [86. fmul  ], succ = [88. fadd  ])
    88. fadd    r80,  r84   ->  r85          (pred = [83. fmul  , 87. fmul  ], succ = [90. fadd  ])
    89. fmul     r4,  r23   ->  r86          (pred = [ 4. fload ], succ = [90. fadd  ])
    90. fadd    r85,  r86   ->  r87          (pred = [88. fadd  , 89. fmul  ], succ = [91. fmul  ])
    91. fmul    r39,  r87   ->  r88          (pred = [90. fadd  ], succ = [92. fstore])
    92. fstore  r88, o/fp_rw                  (pred = [91. fmul  ], succ = [])
    93. fmul     r2,   r6   ->  r89          (pred = [ 2. fload ], succ = [94. fsub  ])
    94. fsub    r48,  r89   ->  r90          (pred = [93. fmul  ], succ = [95. fmul  ])
    95. fmul    r90,  r15   ->  r91          (pred = [94. fsub  ], succ = [99. fadd  ])
    96. fsub     r5, c.1.0  ->  r92          (pred = [], succ = [97. fmul  ])
    97. fmul    r92,  r42   ->  r93          (pred = [96. fsub  ], succ = [98. fmul  ])
    98. fmul    r93,  r19   ->  r94          (pred = [97. fmul  ], succ = [99. fadd  ])
    99. fadd    r91,  r94   ->  r95          (pred = [95. fmul  , 98. fmul  ], succ = [103. fadd  ])
    100. fmul     r2,   r6   ->  r96          (pred = [ 2. fload ], succ = [101. fadd  ])
    101. fadd    r48,  r96   ->  r97          (pred = [100. fmul  ], succ = [102. fmul  ])
    102. fmul    r97,  r23   ->  r98          (pred = [101. fadd  ], succ = [103. fadd  ])
    103. fadd    r95,  r98   ->  r99          (pred = [99. fadd  , 102. fmul  ], succ = [104. fmul  ])
    104. fmul    r39,  r99   -> r100          (pred = [103. fadd  ], succ = [105. fstore])
    105. fstore r100, o/fp_E                  (pred = [104. fmul  ], succ = [])
    106. fsub     r5, c.1.0  -> r101          (pred = [], succ = [107. fmul  ])
    107. fmul   c.2.0, r101  -> r102          (pred = [106. fsub  ], succ = [108. fmul  ])
    108. fmul   r102,  r31   -> r103          (pred = [107. fmul  ], succ = [109. fadd  ])
    109. fadd    r27, r103   -> r104          (pred = [108. fmul  ], succ = [110. fadd  ])
    110. fadd   r104,  r35   -> r105          (pred = [109. fadd  ], succ = [111. fmul  ])
    111. fmul    r39, r105   -> r106          (pred = [110. fadd  ], succ = [112. fstore])
    112. fstore r106, o/fn_r                  (pred = [111. fmul  ], succ = [])
    113. fsub     r2,   r6   -> r107          (pred = [ 2. fload ], succ = [114. fmul  ])
    114. fmul   r107,  r27   -> r108          (pred = [113. fsub  ], succ = [119. fadd  ])
    115. fsub     r5, c.1.0  -> r109          (pred = [], succ = [116. fmul  ])
    116. fmul   c.2.0, r109  -> r110          (pred = [115. fsub  ], succ = [117. fmul  ])
    117. fmul   r110,   r2   -> r111          (pred = [ 2. fload , 116. fmul  ], succ = [118. fmul  ])
    118. fmul   r111,  r31   -> r112          (pred = [117. fmul  ], succ = [119. fadd  ])
    119. fadd   r108, r112   -> r113          (pred = [114. fmul  , 118. fmul  ], succ = [122. fadd  ])
    120. fadd     r2,   r6   -> r114          (pred = [ 2. fload ], succ = [121. fmul  ])
    121. fmul   r114,  r35   -> r115          (pred = [120. fadd  ], succ = [122. fadd  ])
    122. fadd   r113, r115   -> r116          (pred = [119. fadd  , 121. fmul  ], succ = [123. fmul  ])
    123. fmul    r39, r116   -> r117          (pred = [122. fadd  ], succ = [124. fstore])
    124. fstore r117, o/fn_ru                  (pred = [123. fmul  ], succ = [])
    125. fmul     r3,  r27   -> r118          (pred = [ 3. fload ], succ = [130. fadd  ])
    126. fsub     r5, c.1.0  -> r119          (pred = [], succ = [127. fmul  ])
    127. fmul   c.2.0, r119  -> r120          (pred = [126. fsub  ], succ = [128. fmul  ])
    128. fmul   r120,   r3   -> r121          (pred = [ 3. fload , 127. fmul  ], succ = [129. fmul  ])
    129. fmul   r121,  r31   -> r122          (pred = [128. fmul  ], succ = [130. fadd  ])
    130. fadd   r118, r122   -> r123          (pred = [125. fmul  , 129. fmul  ], succ = [132. fadd  ])
    131. fmul     r3,  r35   -> r124          (pred = [ 3. fload ], succ = [132. fadd  ])
    132. fadd   r123, r124   -> r125          (pred = [130. fadd  , 131. fmul  ], succ = [133. fmul  ])
    133. fmul    r39, r125   -> r126          (pred = [132. fadd  ], succ = [134. fstore])
    134. fstore r126, o/fn_rv                  (pred = [133. fmul  ], succ = [])
    135. fmul     r4,  r27   -> r127          (pred = [ 4. fload ], succ = [140. fadd  ])
    136. fsub     r5, c.1.0  -> r128          (pred = [], succ = [137. fmul  ])
    137. fmul   c.2.0, r128  -> r129          (pred = [136. fsub  ], succ = [138. fmul  ])
    138. fmul   r129,   r4   -> r130          (pred = [ 4. fload , 137. fmul  ], succ = [139. fmul  ])
    139. fmul   r130,  r31   -> r131          (pred = [138. fmul  ], succ = [140. fadd  ])
    140. fadd   r127, r131   -> r132          (pred = [135. fmul  , 139. fmul  ], succ = [142. fadd  ])
    141. fmul     r4,  r35   -> r133          (pred = [ 4. fload ], succ = [142. fadd  ])
    142. fadd   r132, r133   -> r134          (pred = [140. fadd  , 141. fmul  ], succ = [143. fmul  ])
    143. fmul    r39, r134   -> r135          (pred = [142. fadd  ], succ = [144. fstore])
    144. fstore r135, o/fn_rw                  (pred = [143. fmul  ], succ = [])
    145. fmul     r2,   r6   -> r136          (pred = [ 2. fload ], succ = [146. fsub  ])
    146. fsub    r48, r136   -> r137          (pred = [145. fmul  ], succ = [147. fmul  ])
    147. fmul   r137,  r27   -> r138          (pred = [146. fsub  ], succ = [151. fadd  ])
    148. fsub     r5, c.1.0  -> r139          (pred = [], succ = [149. fmul  ])
    149. fmul   r139,  r42   -> r140          (pred = [148. fsub  ], succ = [150. fmul  ])
    150. fmul   r140,  r31   -> r141          (pred = [149. fmul  ], succ = [151. fadd  ])
    151. fadd   r138, r141   -> r142          (pred = [147. fmul  , 150. fmul  ], succ = [155. fadd  ])
    152. fmul     r2,   r6   -> r143          (pred = [ 2. fload ], succ = [153. fadd  ])
    153. fadd    r48, r143   -> r144          (pred = [152. fmul  ], succ = [154. fmul  ])
    154. fmul   r144,  r35   -> r145          (pred = [153. fadd  ], succ = [155. fadd  ])
    155. fadd   r142, r145   -> r146          (pred = [151. fadd  , 154. fmul  ], succ = [156. fmul  ])
    156. fmul    r39, r146   -> r147          (pred = [155. fadd  ], succ = [157. fstore])
    157. fstore r147, o/fn_E                  (pred = [156. fmul  ], succ = [])
Edges: 


=================================
Speedup:
	oc = 1580000
	orig_oc = 1580000
	speedup = 1.0
