	in_params = [i/p, i/dk, i/pk, i/ck]
	out_params = [o/f, o/fd]

START STOP CFG Node 0 (cnt = 100):
     0. fload   i/p         ->   r0          (pred = [], succ = [ 9. fcmplte])
     1. fload  i/dk         ->   r1          (pred = [], succ = [])
     2. fload  i/pk         ->   r2          (pred = [], succ = [ 9. fcmplte])
     3. fload  i/ck         ->   r3          (pred = [], succ = [])
     4. fmov    c.1,   r8                    (pred = [], succ = [])
     5. fmov    c.2,   r9                    (pred = [], succ = [])
     6. fmov    c.4,  r10                    (pred = [], succ = [])
     7. fmov    c.5,  r11                    (pred = [], succ = [])
     8. fmov    c.6,  r12                    (pred = [], succ = [])
     9. fcmplte   r0,   r2   ->   p0          (pred = [ 0. fload ,  2. fload ], succ = [10. jump  , 24. jump  ])
    11. fdiv     r0,   r2   ->  r13 ?   p0   (pred = [], succ = [12. fmov  ])
    12. fmov    r13,   r6           ?   p0   (pred = [11. fdiv  ], succ = [])
    13. fmul    r10,   r3   ->  r14 ?   p0   (pred = [], succ = [16. fmul  ])
    14. fpow     r6,   r8   ->  r15 ?   p0   (pred = [], succ = [15. fsub  ])
    15. fsub    r15, c.1.0  ->  r16 ?   p0   (pred = [14. fpow  ], succ = [16. fmul  ])
    16. fmul    r14,  r16   ->  r17 ?   p0   (pred = [13. fmul  , 15. fsub  ], succ = [17. fstore])
    17. fstore  r17,  o/f           ?   p0   (pred = [16. fmul  ], succ = [])
    18. fmul     r1,   r3   ->  r18 ?   p0   (pred = [], succ = [19. fdiv  ])
    19. fdiv   c.1.0,  r18  ->  r19 ?   p0   (pred = [18. fmul  ], succ = [22. fmul  ])
    20. unary_minus   r9         ->  r20 ?   p0   (pred = [], succ = [21. fpow  ])
    21. fpow     r6,  r20   ->  r21 ?   p0   (pred = [20. unary_minus], succ = [22. fmul  ])
    22. fmul    r19,  r21   ->  r22 ?   p0   (pred = [19. fdiv  , 21. fpow  ], succ = [23. fstore])
    23. fstore  r22, o/fd           ?   p0   (pred = [22. fmul  ], succ = [])
    44. pnot     p0         ->   p2          (pred = [], succ = [])
    25. fdiv    r11,   r1   ->  r23 ?   p2   (pred = [], succ = [26. fmov  ])
    26. fmov    r23,   r4           ?   p2   (pred = [25. fdiv  ], succ = [])
    27. fmul    r12,   r2   ->  r24 ?   p2   (pred = [], succ = [28. fmov  ])
    28. fmov    r24,   r5           ?   p2   (pred = [27. fmul  ], succ = [])
    29. fadd     r5,   r0   ->  r25 ?   p2   (pred = [], succ = [30. fdiv  ])
    30. fdiv     r4,  r25   ->  r26 ?   p2   (pred = [29. fadd  ], succ = [31. fsqrt ])
    31. fsqrt   r26         ->  r27 ?   p2   (pred = [30. fdiv  ], succ = [32. fmov  ])
    32. fmov    r27,   r7           ?   p2   (pred = [31. fsqrt ], succ = [])
    33. fsub     r0,   r2   ->  r28 ?   p2   (pred = [], succ = [34. fmul  ])
    34. fmul    r28,   r7   ->  r29 ?   p2   (pred = [33. fsub  ], succ = [35. fstore])
    35. fstore  r29,  o/f           ?   p2   (pred = [34. fmul  ], succ = [])
    36. fsub     r0,   r2   ->  r30 ?   p2   (pred = [], succ = [37. fmul  ])
    37. fmul   c.0.5,  r30  ->  r31 ?   p2   (pred = [36. fsub  ], succ = [39. fdiv  ])
    38. fadd     r5,   r0   ->  r32 ?   p2   (pred = [], succ = [39. fdiv  ])
    39. fdiv    r31,  r32   ->  r33 ?   p2   (pred = [37. fmul  , 38. fadd  ], succ = [40. fsub  ])
    40. fsub   c.1.0,  r33  ->  r34 ?   p2   (pred = [39. fdiv  ], succ = [41. fmul  ])
    41. fmul    r34,   r7   ->  r35 ?   p2   (pred = [40. fsub  ], succ = [42. fstore])
    42. fstore  r35, o/fd           ?   p2   (pred = [41. fmul  ], succ = [])
Edges: 


=================================
Results compare:
	f: diff = [0.0, 0.0, 0.1769739318113158, 2.379429229682168, 0.0, 0.0, 0.46839385692948443, 0.0, 1.8084693796744402, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0471607505231642, 0.0, 0.0, 0.0, 0.0, 0.6056107363309289, 0.1410251036916117, 0.0, 0.0, 3.084193085948068, 0.0, 0.0, 1.539912231190213, 0.0, 0.0, 0.0, 0.438532653226923, 1.706776184586724, 0.0, 0.0, 0.0, 0.028920100164073557, 0.03543213246690098, 1.4651167421616382, 0.5450451425526229, 0.5647566964696152, 0.0, 0.0, 0.01938149549131826, 0.0, 1.837674951519718, 1.1456637494406592, 0.0, 0.4409575171297768, 0.0, 0.0, 0.7633711433534326, 1.379618141760251, 2.772070215258418, 0.0, 0.47087552298057833, 0.0, 0.2766004628926346, 2.0331646081691814, 1.8010421984385439, 0.8071811120168921, 0.0, 0.0, 1.0742100163824801, 0.0, 0.0, 0.0, 0.0, 0.9940064507095409, 1.53019280395386, 0.0, 0.37079960970725906, 0.0, 0.0, 0.0, 1.259019771003806, 0.0, 1.7459575510471448, 1.525257717939023, 0.0, 0.0, 0.0, 0.0, 0.0, 1.8350556810421161, 0.37305464611415345, 0.5617242812072015, 0.9479742488994444, 0.5814372275932569, 0.0, 0.314238505519627, 1.2241503204868103, 0.5181530780317892, 1.8752341999955595, 0.0, 0.0, 0.0, 0.0]
	fd: diff = [0.0, 0.0, -0.0735969123360547, -0.17980364440065466, 0.0, 0.0, 0.19381222386051628, 0.0, -0.03570446813936101, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05222372172662071, 0.0, 0.0, 0.0, 0.0, 0.09756891687260594, 0.15696284364178076, 0.0, 0.0, -0.5553519171937262, 0.0, 0.0, -0.7428188145759305, 0.0, 0.0, 0.0, -0.325471900038645, -0.512101625602523, 0.0, 0.0, 0.0, -0.20959541582191077, -0.2163163949818675, 0.07434762632466374, -0.15333336244062268, 0.1872125030617408, 0.0, 0.0, 0.11912533066207476, 0.0, -0.10134916335696509, -1.155479403695774, 0.0, -0.1355625842543352, 0.0, 0.0, -0.14065184084808213, 0.05795378808485441, -0.729905332863148, 0.0, -0.4767164711067392, 0.0, 0.021257086850347662, -0.639638036774339, -0.14615159929561516, -0.4514625939709278, 0.0, 0.0, -0.039624157673643357, 0.0, 0.0, 0.0, 0.0, -0.23566093398323762, -1.4684109789281812, 0.0, 0.005047205909597174, 0.0, 0.0, 0.0, -0.25851270618636557, 0.0, -0.30967489531071557, -0.12668436983251374, 0.0, 0.0, 0.0, 0.0, 0.0, -0.21013256707215222, -0.09112476931353769, 0.012864231498872947, -1.0062548568254437, 0.11788787931086586, 0.0, 0.0779417451945768, -0.37974372777770515, 0.09958128508832775, -0.38254366199775414, 0.0, 0.0, 0.0, 0.0]
Speedup:
	oc = 4200
	orig_oc = 2736
	speedup = 0.6514285714285715
