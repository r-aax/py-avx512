	in_params = [i/a, i/b]
	out_params = [o/c, o/d]

START CFG Node 0 (cnt = 10000):
     0. fload   i/a         ->   r0          (pred = [], succ = [ 2. fcmpge])
     1. fload   i/b         ->   r1          (pred = [], succ = [ 2. fcmpge])
     2. fcmpge   r0,   r1   ->   p0          (pred = [ 0. fload ,  1. fload ], succ = [ 3. jump  ,  6. jump  ])
     3. jump                        ?   p0   (pred = [ 2. fcmpge], succ = [])
     6. jump                        ?  !p0   (pred = [ 2. fcmpge], succ = [])
Edges: [3. 0 -> 1, cnt = 4990, prob = 0.5], [6. 0 -> 2, cnt = 5010, prob = 0.5]

CFG Node 1 (cnt = 4990):
     4. fadd     r0,   r1   ->   r2          (pred = [], succ = [ 5. fstore])
     5. fstore   r2,  o/c                    (pred = [ 4. fadd  ], succ = [])
    17. fcmpge  c.1,  c.0   ->   p2          (pred = [], succ = [18. jump  ])
    18. jump                        ?   p2   (pred = [17. fcmpge], succ = [])
Edges: [18. 1 -> 3, cnt = 4990, prob = 1.0]

CFG Node 2 (cnt = 5010):
     7. fsub     r0,   r1   ->   r3          (pred = [], succ = [ 8. fstore])
     8. fstore   r3,  o/c                    (pred = [ 7. fsub  ], succ = [])
     9. fmul    c.2,   r0   ->   r4          (pred = [], succ = [10. fcmplt])
    10. fcmplt   r1,   r4   ->   p1          (pred = [ 9. fmul  ], succ = [11. jump  , 14. jump  ])
    11. jump                        ?   p1   (pred = [10. fcmplt], succ = [])
    14. jump                        ?  !p1   (pred = [10. fcmplt], succ = [])
Edges: [11. 2 -> 3, cnt = 5010, prob = 1.0], [14. 2 -> 4, cnt = 0, prob = 0.0]

STOP CFG Node 3 (cnt = 10000):
    12. fmul     r0,   r1   ->   r5          (pred = [], succ = [13. fstore])
    13. fstore   r5,  o/d                    (pred = [12. fmul  ], succ = [])
Edges: 

STOP CFG Node 4 (cnt = 0):
    15. fdiv     r0,   r1   ->   r6          (pred = [], succ = [16. fstore])
    16. fstore   r6,  o/d                    (pred = [15. fdiv  ], succ = [])
Edges: 


=================================
Speedup:
	oc = 110020
	orig_oc = 110020
	speedup = 1.0
