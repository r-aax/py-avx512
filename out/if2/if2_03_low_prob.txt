	in_params = [i/a, i/b]
	out_params = [o/c, o/d]

START STOP CFG Node 0 (cnt = 100):
     0. fload   i/a         ->   r0          (pred = [], succ = [ 2. fcmpge])
     1. fload   i/b         ->   r1          (pred = [], succ = [ 2. fcmpge])
     2. fcmpge   r0,   r1   ->   p0          (pred = [ 0. fload ,  1. fload ], succ = [ 3. jump  ,  6. jump  ])
    19. pmov     p0         ->   p3          (pred = [], succ = [])
     4. fadd     r0,   r1   ->   r2 ?   p3   (pred = [], succ = [ 5. fstore])
     5. fstore   r2,  o/c           ?   p3   (pred = [ 4. fadd  ], succ = [])
    17. fcmpge  c.1,  c.0   ->   p2 ?   p3   (pred = [], succ = [18. jump  ])
    20. pand     p3,   p2   ->   p4          (pred = [], succ = [])
    21. pnot     p0         ->   p5          (pred = [], succ = [])
     7. fsub     r0,   r1   ->   r3 ?   p5   (pred = [], succ = [ 8. fstore])
     8. fstore   r3,  o/c           ?   p5   (pred = [ 7. fsub  ], succ = [])
     9. fmul    c.2,   r0   ->   r4 ?   p5   (pred = [], succ = [10. fcmplt])
    10. fcmplt   r1,   r4   ->   p1 ?   p5   (pred = [ 9. fmul  ], succ = [11. jump  , 14. jump  ])
    23. pandn    p5,   p1   ->   p7          (pred = [], succ = [])
    22. pand     p5,   p1   ->   p6          (pred = [], succ = [])
    26. pmov     p4         ->  p10          (pred = [], succ = [])
    24. pmov     p6         ->   p8 ?  p10   (pred = [], succ = [])
    28. pand    p10,   p8   ->  p12          (pred = [], succ = [])
    27. pand    p10,   p8   ->  p11          (pred = [], succ = [])
    12. fmul     r0,   r1   ->   r5 ?  p11   (pred = [], succ = [13. fstore])
    13. fstore   r5,  o/d           ?  p12   (pred = [12. fmul  ], succ = [])
Edges: 


=================================
Results compare:
	c: diff = [-2.540640523859957, -2.570129400478333, -2.0429651274020015, -2.9681844505299235, 0.0, 0.0, -3.164732316152059, -2.9243770991698446, 0.0, -2.2719536720278253, 0.0, -2.1565951390647733, -2.2518199537955343, -3.254554044113511, -2.839099115328108, -2.7631477065465715, -2.1335168804379894, 0.0, 0.0, -3.585204492727976, 0.0, -2.38440942270521, -2.704043497671684, 0.0, -2.231352822471451, 0.0, -2.465312264303181, 0.0, 0.0, 0.0, 0.0, -3.5683257220109574, 0.0, 0.0, 0.0, -3.160494443206517, 0.0, 0.0, -2.67419595704129, 0.0, 0.0, -3.323273408215152, -2.2883039231676126, -2.2235529280457946, -2.516246894735107, -3.1284088662980887, -2.652793724763197, -2.511232144470802, -2.312244631465025, 0.0, 0.0, -2.5505970900174955, -2.5005952849728947, -2.2990020298754867, 0.0, 0.0, -2.598655051574614, 0.0, -3.530850441480923, 0.0, 0.0, -2.259572726894037, 0.0, -2.000962217927701, 0.0, -3.064796487925828, -2.6090939426884887, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.0582131781792192, 0.0, -2.224549715347032, -2.8512759272239983, -2.42524982726675, -2.5634509883230505, 0.0, -2.5800611558095583, -2.1497861931702342, 0.0, 0.0, -3.5161295473954324, -3.632061331737957, -2.391286025953664, -2.763607067940147, 0.0, 0.0, -2.798893145123002, 0.0, 0.0, 0.0, 0.0, 0.0, -2.8938771208629532, -2.1812156082278644, 0.0]
	d: diff = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Speedup:
	oc = 2100
	orig_oc = 1096
	speedup = 0.5219047619047619
