	in_params = [i/dl, i/ul, i/pl, i/cl, i/dr, i/ur, i/pr, i/cr]
	out_params = [o/pm]

START STOP CFG Node 0 (cnt = 100):
     0. fload  i/dl         ->   r0          (pred = [], succ = [16. fadd  ])
     1. fload  i/ul         ->   r1          (pred = [], succ = [23. fsub  ])
     2. fload  i/pl         ->   r2          (pred = [], succ = [21. fadd  , 33. fcmplt, 42. fcmpge])
     3. fload  i/cl         ->   r3          (pred = [], succ = [18. fadd  ])
     4. fload  i/dr         ->   r4          (pred = [], succ = [16. fadd  ])
     5. fload  i/ur         ->   r5          (pred = [], succ = [23. fsub  ])
     6. fload  i/pr         ->   r6          (pred = [], succ = [21. fadd  , 33. fcmplt, 42. fcmpge])
     7. fload  i/cr         ->   r7          (pred = [], succ = [18. fadd  ])
     8. fmov    c.1,  r20                    (pred = [], succ = [])
     9. fmov    c.2,  r21                    (pred = [], succ = [])
    10. fmov    c.3,  r22                    (pred = [], succ = [])
    11. fmov    c.4,  r23                    (pred = [], succ = [])
    12. fmov    c.5,  r24                    (pred = [], succ = [])
    13. fmov    c.6,  r25                    (pred = [], succ = [])
    14. fmov    c.7,  r26                    (pred = [], succ = [])
    15. fmov   c.2.0,  r18                   (pred = [], succ = [])
    16. fadd     r0,   r4   ->  r27          (pred = [ 0. fload ,  4. fload ], succ = [17. fmul  ])
    17. fmul   c.0.25,  r27 ->  r28          (pred = [16. fadd  ], succ = [19. fmul  ])
    18. fadd     r3,   r7   ->  r29          (pred = [ 3. fload ,  7. fload ], succ = [19. fmul  ])
    19. fmul    r28,  r29   ->  r30          (pred = [17. fmul  , 18. fadd  ], succ = [20. fmov  ])
    20. fmov    r30,   r8                    (pred = [19. fmul  ], succ = [])
    21. fadd     r2,   r6   ->  r31          (pred = [ 2. fload ,  6. fload ], succ = [22. fmul  ])
    22. fmul   c.0.5,  r31  ->  r32          (pred = [21. fadd  ], succ = [26. fadd  ])
    23. fsub     r1,   r5   ->  r33          (pred = [ 1. fload ,  5. fload ], succ = [24. fmul  ])
    24. fmul   c.0.5,  r33  ->  r34          (pred = [23. fsub  ], succ = [25. fmul  ])
    25. fmul    r34,   r8   ->  r35          (pred = [24. fmul  ], succ = [26. fadd  ])
    26. fadd    r32,  r35   ->  r36          (pred = [22. fmul  , 25. fmul  ], succ = [27. fmov  ])
    27. fmov    r36,  r13                    (pred = [26. fadd  ], succ = [])
    28. fcmpge  r13, c.0.0  ->   p0          (pred = [], succ = [29. jump  , 31. jump  ])
    33. fcmplt   r2,   r6   ->   p1          (pred = [ 2. fload ,  6. fload ], succ = [34. jump  , 36. jump  ])
    42. fcmpge   r2,   r6   ->   p4          (pred = [ 2. fload ,  6. fload ], succ = [43. jump  , 45. jump  ])
    51. fdiv    r11,  r12   ->  r37          (pred = [], succ = [52. fmov  ])
    52. fmov    r37,  r17                    (pred = [51. fdiv  ], succ = [])
    53. fcmplte  r17,  r18   ->   p7          (pred = [], succ = [55. pand  ])
    54. fcmplte  r12,  r13   ->   p8          (pred = [], succ = [55. pand  ])
    55. pand     p7,   p8   ->   p9          (pred = [53. fcmplte, 54. fcmplte], succ = [57. pand  ])
    56. fcmplte  r13,  r11   ->  p10          (pred = [], succ = [57. pand  ])
    57. pand     p9,  p10   ->  p11          (pred = [55. pand  , 56. fcmplte], succ = [58. jump  , 60. jump  ])
    120. pmov     p0         ->  p15          (pred = [], succ = [])
    30. fmov    r13,  r13           ?  p15   (pred = [], succ = [])
    38. fcmpge  c.1,  c.0   ->   p2 ?  p15   (pred = [], succ = [39. jump  ])
    121. pand    p15,   p2   ->  p16          (pred = [], succ = [])
    132. pmov    p18         ->  p27          (pred = [], succ = [])
    128. pmov    p16         ->  p23 ?  p27   (pred = [], succ = [])
    136. pand    p27,  p23   ->  p31          (pred = [], succ = [])
    133. pand    p27,  p23   ->  p28          (pred = [], succ = [])
    124. pmov     p1         ->  p19 ?  p28   (pred = [], succ = [])
    130. pand    p23,  p19   ->  p25 ?  p27   (pred = [], succ = [])
    135. pand    p27,  p25   ->  p30          (pred = [], succ = [])
    129. pand    p23,  p19   ->  p24 ?  p27   (pred = [], succ = [])
    134. pand    p27,  p24   ->  p29          (pred = [], succ = [])
    35. fmov     r2,  r12           ?  p29   (pred = [], succ = [])
    47. fcmpge  c.1,  c.0   ->   p5 ?  p30   (pred = [], succ = [48. jump  ])
    125. pand    p19,   p5   ->  p20 ?  p31   (pred = [], succ = [])
    131. pand    p23,  p20   ->  p26 ?  p27   (pred = [], succ = [])
    137. pand    p27,  p26   ->  p32          (pred = [], succ = [])
    146. pmov    p22         ->  p41          (pred = [], succ = [])
    142. pmov    p32         ->  p37 ?  p41   (pred = [], succ = [])
    150. pand    p41,  p37   ->  p45          (pred = [], succ = [])
    147. pand    p41,  p37   ->  p42          (pred = [], succ = [])
    138. pmov     p4         ->  p33 ?  p42   (pred = [], succ = [])
    144. pand    p37,  p33   ->  p39 ?  p41   (pred = [], succ = [])
    149. pand    p41,  p39   ->  p44          (pred = [], succ = [])
    143. pand    p37,  p33   ->  p38 ?  p41   (pred = [], succ = [])
    148. pand    p41,  p38   ->  p43          (pred = [], succ = [])
    44. fmov     r2,  r11           ?  p43   (pred = [], succ = [])
    116. fcmpge  c.1,  c.0   ->  p13 ?  p44   (pred = [], succ = [117. jump  ])
    139. pand    p33,  p13   ->  p34 ?  p45   (pred = [], succ = [])
    145. pand    p37,  p34   ->  p40 ?  p41   (pred = [], succ = [])
    151. pand    p41,  p40   ->  p46          (pred = [], succ = [])
    160. pmov    p36         ->  p55          (pred = [], succ = [])
    158. pmov    p46         ->  p53 ?  p55   (pred = [], succ = [])
    161. pand    p55,  p53   ->  p56          (pred = [], succ = [])
    152. pmov    p11         ->  p47 ?  p56   (pred = [], succ = [])
    159. pand    p53,  p47   ->  p54 ?  p55   (pred = [], succ = [])
    162. pand    p55,  p54   ->  p57          (pred = [], succ = [])
    59. fstore  r13, o/pm           ?  p57   (pred = [], succ = [])
Edges: 


=================================
Results compare:
	pm: diff = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Speedup:
	oc = 7700
	orig_oc = 4000
	speedup = 0.5194805194805194
